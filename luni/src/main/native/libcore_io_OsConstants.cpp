/*
 * Copyright (C) 2011 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#define LOG_TAG "OsConstants"

#include "JNIHelp.h"
#include "JniConstants.h"

#include <fcntl.h>
#include <unistd.h>

// Generated by gen-os-constants.
static jint OsConstants_get_FD_CLOEXEC(JNIEnv*, jclass) { return FD_CLOEXEC; }
static jint OsConstants_get_F_DUPFD(JNIEnv*, jclass) { return F_DUPFD; }
static jint OsConstants_get_F_GETFD(JNIEnv*, jclass) { return F_GETFD; }
static jint OsConstants_get_F_GETFL(JNIEnv*, jclass) { return F_GETFL; }
static jint OsConstants_get_F_GETLK(JNIEnv*, jclass) { return F_GETLK; }
static jint OsConstants_get_F_GETOWN(JNIEnv*, jclass) { return F_GETOWN; }
static jint OsConstants_get_F_OK(JNIEnv*, jclass) { return F_OK; }
static jint OsConstants_get_F_RDLCK(JNIEnv*, jclass) { return F_RDLCK; }
static jint OsConstants_get_F_SETFD(JNIEnv*, jclass) { return F_SETFD; }
static jint OsConstants_get_F_SETFL(JNIEnv*, jclass) { return F_SETFL; }
static jint OsConstants_get_F_SETLK(JNIEnv*, jclass) { return F_SETLK; }
static jint OsConstants_get_F_SETLKW(JNIEnv*, jclass) { return F_SETLKW; }
static jint OsConstants_get_F_SETOWN(JNIEnv*, jclass) { return F_SETOWN; }
static jint OsConstants_get_F_UNLCK(JNIEnv*, jclass) { return F_UNLCK; }
static jint OsConstants_get_F_WRLCK(JNIEnv*, jclass) { return F_WRLCK; }
static jint OsConstants_get_O_ACCMODE(JNIEnv*, jclass) { return O_ACCMODE; }
static jint OsConstants_get_O_APPEND(JNIEnv*, jclass) { return O_APPEND; }
static jint OsConstants_get_O_CREAT(JNIEnv*, jclass) { return O_CREAT; }
static jint OsConstants_get_O_EXCL(JNIEnv*, jclass) { return O_EXCL; }
static jint OsConstants_get_O_NOCTTY(JNIEnv*, jclass) { return O_NOCTTY; }
static jint OsConstants_get_O_NONBLOCK(JNIEnv*, jclass) { return O_NONBLOCK; }
static jint OsConstants_get_O_RDONLY(JNIEnv*, jclass) { return O_RDONLY; }
static jint OsConstants_get_O_RDWR(JNIEnv*, jclass) { return O_RDWR; }
static jint OsConstants_get_O_SYNC(JNIEnv*, jclass) { return O_SYNC; }
static jint OsConstants_get_O_TRUNC(JNIEnv*, jclass) { return O_TRUNC; }
static jint OsConstants_get_O_WRONLY(JNIEnv*, jclass) { return O_WRONLY; }
static jint OsConstants_get_R_OK(JNIEnv*, jclass) { return R_OK; }
static jint OsConstants_get_SEEK_CUR(JNIEnv*, jclass) { return SEEK_CUR; }
static jint OsConstants_get_SEEK_END(JNIEnv*, jclass) { return SEEK_END; }
static jint OsConstants_get_SEEK_SET(JNIEnv*, jclass) { return SEEK_SET; }
static jint OsConstants_get_STDERR_FILENO(JNIEnv*, jclass) { return STDERR_FILENO; }
static jint OsConstants_get_STDIN_FILENO(JNIEnv*, jclass) { return STDIN_FILENO; }
static jint OsConstants_get_STDOUT_FILENO(JNIEnv*, jclass) { return STDOUT_FILENO; }
static jint OsConstants_get_W_OK(JNIEnv*, jclass) { return W_OK; }
static jint OsConstants_get_X_OK(JNIEnv*, jclass) { return X_OK; }

// Generated by gen-os-constants.
static JNINativeMethod gMethods[] = {
    NATIVE_METHOD(OsConstants, get_FD_CLOEXEC, "()I"),
    NATIVE_METHOD(OsConstants, get_F_DUPFD, "()I"),
    NATIVE_METHOD(OsConstants, get_F_GETFD, "()I"),
    NATIVE_METHOD(OsConstants, get_F_GETFL, "()I"),
    NATIVE_METHOD(OsConstants, get_F_GETLK, "()I"),
    NATIVE_METHOD(OsConstants, get_F_GETOWN, "()I"),
    NATIVE_METHOD(OsConstants, get_F_OK, "()I"),
    NATIVE_METHOD(OsConstants, get_F_RDLCK, "()I"),
    NATIVE_METHOD(OsConstants, get_F_SETFD, "()I"),
    NATIVE_METHOD(OsConstants, get_F_SETFL, "()I"),
    NATIVE_METHOD(OsConstants, get_F_SETLK, "()I"),
    NATIVE_METHOD(OsConstants, get_F_SETLKW, "()I"),
    NATIVE_METHOD(OsConstants, get_F_SETOWN, "()I"),
    NATIVE_METHOD(OsConstants, get_F_UNLCK, "()I"),
    NATIVE_METHOD(OsConstants, get_F_WRLCK, "()I"),
    NATIVE_METHOD(OsConstants, get_O_ACCMODE, "()I"),
    NATIVE_METHOD(OsConstants, get_O_APPEND, "()I"),
    NATIVE_METHOD(OsConstants, get_O_CREAT, "()I"),
    NATIVE_METHOD(OsConstants, get_O_EXCL, "()I"),
    NATIVE_METHOD(OsConstants, get_O_NOCTTY, "()I"),
    NATIVE_METHOD(OsConstants, get_O_NONBLOCK, "()I"),
    NATIVE_METHOD(OsConstants, get_O_RDONLY, "()I"),
    NATIVE_METHOD(OsConstants, get_O_RDWR, "()I"),
    NATIVE_METHOD(OsConstants, get_O_SYNC, "()I"),
    NATIVE_METHOD(OsConstants, get_O_TRUNC, "()I"),
    NATIVE_METHOD(OsConstants, get_O_WRONLY, "()I"),
    NATIVE_METHOD(OsConstants, get_R_OK, "()I"),
    NATIVE_METHOD(OsConstants, get_SEEK_CUR, "()I"),
    NATIVE_METHOD(OsConstants, get_SEEK_END, "()I"),
    NATIVE_METHOD(OsConstants, get_SEEK_SET, "()I"),
    NATIVE_METHOD(OsConstants, get_STDERR_FILENO, "()I"),
    NATIVE_METHOD(OsConstants, get_STDIN_FILENO, "()I"),
    NATIVE_METHOD(OsConstants, get_STDOUT_FILENO, "()I"),
    NATIVE_METHOD(OsConstants, get_W_OK, "()I"),
    NATIVE_METHOD(OsConstants, get_X_OK, "()I"),
};
int register_libcore_io_OsConstants(JNIEnv* env) {
    return jniRegisterNativeMethods(env, "libcore/io/OsConstants", gMethods, NELEM(gMethods));
}
