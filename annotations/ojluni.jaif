//
// Copyright (C) 2017 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This file specifies additional annotations that are applied to libcore
// code before generating android stubs and documentation. This data
// is human-maintained and is based on jdk annotations shipped in Android
// Studio.

// If this file is changed, please update libcore/annotated_java_files.bp file by running:
// libcore/annotations/generate_annotated_java_files.py libcore/annotations/ojluni.jaif > libcore/annotated_java_files.bp

package libcore.util:
annotation @NonNull: @java.lang.annotation.Retention(value=CLASS) @java.lang.annotation.Target(value={TYPE_USE})

package java.lang:
class CharSequence:
    method toString()Ljava/lang/String;:
        return: @libcore.util.NonNull

class Enum:
    method valueOf(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;:
        return: @libcore.util.NonNull

class Iterable:
    method iterator()Ljava/util/Iterator;:
        return: @libcore.util.NonNull

class String:
    method toString()Ljava/lang/String;:
        return: @libcore.util.NonNull
    method getBytes(Ljava/lang/String;)[B:
        return: @libcore.util.NonNull
    method getBytes(Ljava/nio/charset/Charset;)[B:
        return: @libcore.util.NonNull
    method getBytes(Ljava/lang/String;)[B:
        return: @libcore.util.NonNull
    method getBytes()[B:
        return: @libcore.util.NonNull
    method toCharArray()[C:
        return: @libcore.util.NonNull
    method subSequence(II)Ljava/lang/CharSequence;:
        return: @libcore.util.NonNull
    method concat(Ljava/lang/String;)Ljava/lang/String;:
        return: @libcore.util.NonNull
    method copyValueOf([CII)Ljava/lang/String;:
        return: @libcore.util.NonNull
    method copyValueOf([C)Ljava/lang/String;:
        return: @libcore.util.NonNull
    method intern()Ljava/lang/String;:
        return: @libcore.util.NonNull
    method replace(CC)Ljava/lang/String;:
        return: @libcore.util.NonNull
    method substring(I)Ljava/lang/String;:
        return: @libcore.util.NonNull
    method substring(II)Ljava/lang/String;:
        return: @libcore.util.NonNull
    method toLowerCase(Ljava/util/Locale;)Ljava/lang/String;:
        return: @libcore.util.NonNull
    method toLowerCase()Ljava/lang/String;:
        return: @libcore.util.NonNull
    method toUpperCase(Ljava/util/Locale;)Ljava/lang/String;:
        return: @libcore.util.NonNull
    method toUpperCase()Ljava/lang/String;:
        return: @libcore.util.NonNull
    method trim()Ljava/lang/String;:
        return: @libcore.util.NonNull
    method valueOf(Z)Ljava/lang/String;:
        return: @libcore.util.NonNull
    method valueOf(C)Ljava/lang/String;:
        return: @libcore.util.NonNull
    method valueOf(I)Ljava/lang/String;:
        return: @libcore.util.NonNull
    method valueOf(J)Ljava/lang/String;:
        return: @libcore.util.NonNull
    method valueOf(F)Ljava/lang/String;:
        return: @libcore.util.NonNull
    method valueOf(D)Ljava/lang/String;:
        return: @libcore.util.NonNull
    method valueOf(Ljava/lang/Object;)Ljava/lang/String;:
        return: @libcore.util.NonNull
    method valueOf([C)Ljava/lang/String;:
        return: @libcore.util.NonNull
    method valueOf([CII)Ljava/lang/String;:
        return: @libcore.util.NonNull
    method split(Ljava/lang/String;I)[Ljava/lang/String;:
        return: @libcore.util.NonNull
    method split(Ljava/lang/String;)[Ljava/lang/String;:
        return: @libcore.util.NonNull
    method join(Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Ljava/lang/String;:
        return: @libcore.util.NonNull
    method join(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;:
        return: @libcore.util.NonNull
    method replaceAll(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;:
        return: @libcore.util.NonNull
    method replaceFirst(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;:
        return: @libcore.util.NonNull


class Thread:
    method toString()Ljava/lang/String;:
        return: @libcore.util.NonNull
    method currentThread()Ljava/lang/Thread;:
        return: @libcore.util.NonNull
